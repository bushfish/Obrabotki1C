
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПутьКХранилищу", Объект.ПутьКХранилищу);
	Параметры.Свойство("ИмяТабДокумента", ИмяТабДокумента);
	
	Если Параметры.Свойство("Результат") Тогда
		Результат.Вывести(Параметры.Результат);
	Иначе
		Элементы.Результат.ОтображатьСетку = Истина;
	КонецЕсли; 
	
	СуммаЯчеекСтруктура = Новый Структура("Сумма,Количество,Минимальное,Максимальное,Среднее", 0, 0, 0, 0, 0);
	
	Элементы.ОтображатьСетку.Пометка = Элементы.Результат.ОтображатьСетку;
	Элементы.ОтображатьЗаголовки.Пометка = Элементы.Результат.ОтображатьЗаголовки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ГруппаПоиск.Видимость = Ложь;	

	Элементы.РежимВыделенияФонаЯчеекПоиска_Строка.Видимость = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ОтображатьСетку(Команда)
	
	Элементы.Результат.ОтображатьСетку = НЕ Элементы.Результат.ОтображатьСетку;
	Элементы.ОтображатьСетку.Пометка = Элементы.Результат.ОтображатьСетку;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьЗаголовки(Команда)
	
	Элементы.Результат.ОтображатьЗаголовки = НЕ Элементы.Результат.ОтображатьЗаголовки;
	Элементы.ОтображатьЗаголовки.Пометка = Элементы.Результат.ОтображатьЗаголовки;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьТекущуюОбласть(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
	    ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	тВерх  = ПолеТабличногоДокумента.ТекущаяОбласть.Верх;
	тНиз   = ПолеТабличногоДокумента.ТекущаяОбласть.Низ;
	тЛево  = ПолеТабличногоДокумента.ТекущаяОбласть.Лево;
	тПраво = ПолеТабличногоДокумента.ТекущаяОбласть.Право;
	
	ОбойтиСлева  = тЛево > 1;
	ОбойтиСверху = тВерх > 1;
	ОбойтиСнизу  = Истина;
	ОбойтиСправа = Истина;
	
	Пока Истина Цикл
		
		Если ОбойтиСлева Тогда
		    тКол = тЛево - 1;
			ЕстьЗначения = Ложь;
			Для тСтр = тВерх По тНиз Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тЛево = тЛево - ?(ЕстьЗначения, 1, 0);
			ОбойтиСлева  = тЛево > 1 И ЕстьЗначения;
		КонецЕсли;
		
		Если ОбойтиСверху Тогда
		    тСтр = тВерх - 1;
			ЕстьЗначения = Ложь;
			Для тКол = тЛево По тПраво Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тВерх = тВерх - ?(ЕстьЗначения, 1, 0);
			ОбойтиСверху = тВерх > 1 И ЕстьЗначения;
		КонецЕсли; 
		
		Если ОбойтиСправа Тогда
		    тКол = тПраво + 1;
			ЕстьЗначения = Ложь;
			Для тСтр = тВерх По тНиз Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тПраво = тПраво + ?(ЕстьЗначения, 1, 0);
			ОбойтиСправа = ЕстьЗначения;
		КонецЕсли; 

		Если ОбойтиСнизу Тогда
		    тСтр = тНиз + 1;
			ЕстьЗначения = Ложь;
			Для тКол = тЛево По тПраво Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тНиз = тНиз + ?(ЕстьЗначения, 1, 0);
			ОбойтиСнизу = ЕстьЗначения;
		КонецЕсли; 

		Если НЕ ОбойтиСверху И НЕ ОбойтиСнизу И НЕ ОбойтиСлева И НЕ ОбойтиСправа Тогда
			Прервать;
		КонецЕсли; 
		
	КонецЦикла; 

	Элементы.Результат.ТекущаяОбласть = ПолеТабличногоДокумента.Область(тВерх, тЛево, тНиз, тПраво);
	
КонецПроцедуры

&НаКлиенте
Функция ЯчейкаЗаполнена(тОбл)

	Если тОбл.Верх = 0 ИЛИ тОбл.Низ = 0 ИЛИ тОбл.Лево = 0 ИЛИ тОбл.Право = 0 Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	//Возврат тОбл.ГраницаСверху.ТипЛинии <> ТипЛинииЯчейкиТабличногоДокумента.НетЛинии;
	Возврат ТипЗнч(тОбл.Расшифровка) = Тип("Структура") 
	И      (тОбл.Расшифровка.РольЯчейки = "ЯчейкаСтрокиТаблицы" 
		ИЛИ тОбл.Расшифровка.РольЯчейки = "ШапкаТаблицы"
		ИЛИ тОбл.Расшифровка.РольЯчейки = "СтрокаСгруппированойТаблицы"
		ИЛИ тОбл.Расшифровка.РольЯчейки = "ШапкаСгруппированойТаблицы"
		);

КонецФункции

&НаКлиенте
Процедура ВыделитьТекущуюКолонку(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
	    ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	МинВерх = 0;
	МаксНиз = 0;
	МаксПраво = 0;
	МинЛево = 0;
	
	Для каждого Область Из ПолеТабличногоДокумента.ВыделенныеОбласти Цикл

		Если ТипЗнч(Область) = Тип("РисунокТабличногоДокумента") Тогда 
			Продолжить;
		КонецЕсли;
		
		Если НЕ Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли; 

		Если МинВерх = 0 Тогда
		    МинВерх = Область.Верх;
		Иначе
		    МинВерх = Мин(МинВерх, Область.Верх);
		КонецЕсли; 
		
		Если МаксНиз = 0 Тогда
		    МаксНиз = Область.Низ;
		Иначе
		    МаксНиз = Макс(МаксНиз, Область.Низ);
		КонецЕсли; 
		
		Если МаксПраво = 0 Тогда
		    МаксПраво = Область.Право;
		Иначе
		    МаксПраво = Макс(МаксПраво, Область.Право);
		КонецЕсли; 
		
		Если МинЛево = 0 Тогда
		    МинЛево = Область.Лево;
		Иначе
		    МинЛево = Мин(МинЛево, Область.Лево);
		КонецЕсли; 
		
	КонецЦикла; 

	тВерх  = Мин(ПолеТабличногоДокумента.ТекущаяОбласть.Верх  , МинВерх);
	тНиз   = Макс(ПолеТабличногоДокумента.ТекущаяОбласть.Низ  , МаксНиз);
	тЛево  = Мин(ПолеТабличногоДокумента.ТекущаяОбласть.Лево  , МинЛево);
	тПраво = Макс(ПолеТабличногоДокумента.ТекущаяОбласть.Право, МаксПраво);

	//ОбойтиСлева  = тЛево > 1;
	ОбойтиСверху = тВерх > 1;
	ОбойтиСнизу  = Истина;
	//ОбойтиСправа = Истина;
	
	Пока Истина Цикл
		
		//Если ОбойтиСлева Тогда
		//    тКол = тЛево - 1;
		//	ЕстьЗначения = Ложь;
		//	Для тСтр = тВерх По тНиз Цикл
		//		тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
		//		Если ЯчейкаЗаполнена(тОбл) Тогда
		//		    ЕстьЗначения = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла; 
		//    тЛево = тЛево - ?(ЕстьЗначения, 1, 0);
		//	ОбойтиСлева  = тЛево > 1 И ЕстьЗначения;
		//КонецЕсли;
		
		Если ОбойтиСверху Тогда
		    тСтр = тВерх - 1;
			ЕстьЗначения = Ложь;
			Для тКол = тЛево По тПраво Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тВерх = тВерх - ?(ЕстьЗначения, 1, 0);
			ОбойтиСверху = тВерх > 1 И ЕстьЗначения;
		КонецЕсли; 
		
		//Если ОбойтиСправа Тогда
		//    тКол = тПраво + 1;
		//	ЕстьЗначения = Ложь;
		//	Для тСтр = тВерх По тНиз Цикл
		//		тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
		//		Если ЯчейкаЗаполнена(тОбл) Тогда
		//		    ЕстьЗначения = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла; 
		//    тПраво = тПраво + ?(ЕстьЗначения, 1, 0);
		//	ОбойтиСправа = ЕстьЗначения;
		//КонецЕсли; 

		Если ОбойтиСнизу Тогда
		    тСтр = тНиз + 1;
			ЕстьЗначения = Ложь;
			Для тКол = тЛево По тПраво Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тНиз = тНиз + ?(ЕстьЗначения, 1, 0);
			ОбойтиСнизу = ЕстьЗначения;
		КонецЕсли; 

		Если НЕ ОбойтиСверху И НЕ ОбойтиСнизу Тогда
			Прервать;
		КонецЕсли; 
		
	КонецЦикла; 

	Элементы.Результат.ТекущаяОбласть = ПолеТабличногоДокумента.Область(тВерх, МинЛево, тНиз, МаксПраво);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьТекущуюСтроку(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
	    ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	МинВерх = 0;
	МаксНиз = 0;
	МаксПраво = 0;
	МинЛево = 0;
	
	Для каждого Область Из ПолеТабличногоДокумента.ВыделенныеОбласти Цикл

		Если ТипЗнч(Область) = Тип("РисунокТабличногоДокумента") Тогда 
			Продолжить;
		КонецЕсли;
		
		Если НЕ Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			Продолжить;
		КонецЕсли; 

		Если МинВерх = 0 Тогда
		    МинВерх = Область.Верх;
		Иначе
		    МинВерх = Мин(МинВерх, Область.Верх);
		КонецЕсли; 
		
		Если МаксНиз = 0 Тогда
		    МаксНиз = Область.Низ;
		Иначе
		    МаксНиз = Макс(МаксНиз, Область.Низ);
		КонецЕсли; 
		
		Если МаксПраво = 0 Тогда
		    МаксПраво = Область.Право;
		Иначе
		    МаксПраво = Макс(МаксПраво, Область.Право);
		КонецЕсли; 
		
		Если МинЛево = 0 Тогда
		    МинЛево = Область.Лево;
		Иначе
		    МинЛево = Мин(МинЛево, Область.Лево);
		КонецЕсли; 
		
	КонецЦикла; 

	тВерх  = Мин(ПолеТабличногоДокумента.ТекущаяОбласть.Верх  , МинВерх);
	тНиз   = Макс(ПолеТабличногоДокумента.ТекущаяОбласть.Низ  , МаксНиз);
	тЛево  = Мин(ПолеТабличногоДокумента.ТекущаяОбласть.Лево  , МинЛево);
	тПраво = Макс(ПолеТабличногоДокумента.ТекущаяОбласть.Право, МаксПраво);

	ОбойтиСлева  = тЛево > 1;
	//ОбойтиСверху = тВерх > 1;
	//ОбойтиСнизу  = Истина;
	ОбойтиСправа = Истина;
	
	Пока Истина Цикл
		
		Если ОбойтиСлева Тогда
		    тКол = тЛево - 1;
			ЕстьЗначения = Ложь;
			Для тСтр = тВерх По тНиз Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тЛево = тЛево - ?(ЕстьЗначения, 1, 0);
			ОбойтиСлева  = тЛево > 1 И ЕстьЗначения;
		КонецЕсли;
		
		//Если ОбойтиСверху Тогда
		//    тСтр = тВерх - 1;
		//	ЕстьЗначения = Ложь;
		//	Для тКол = тЛево По тПраво Цикл
		//		тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
		//		Если ЯчейкаЗаполнена(тОбл) Тогда
		//		    ЕстьЗначения = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла; 
		//    тВерх = тВерх - ?(ЕстьЗначения, 1, 0);
		//	ОбойтиСверху = тВерх > 1 И ЕстьЗначения;
		//КонецЕсли; 
		
		Если ОбойтиСправа Тогда
		    тКол = тПраво + 1;
			ЕстьЗначения = Ложь;
			Для тСтр = тВерх По тНиз Цикл
				тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
				Если ЯчейкаЗаполнена(тОбл) Тогда
				    ЕстьЗначения = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		    тПраво = тПраво + ?(ЕстьЗначения, 1, 0);
			ОбойтиСправа = ЕстьЗначения;
		КонецЕсли; 

		//Если ОбойтиСнизу Тогда
		//    тСтр = тНиз + 1;
		//	ЕстьЗначения = Ложь;
		//	Для тКол = тЛево По тПраво Цикл
		//		тОбл = ПолеТабличногоДокумента.Область(тСтр, тКол);
		//		Если ЯчейкаЗаполнена(тОбл) Тогда
		//		    ЕстьЗначения = Истина;
		//			Прервать;
		//		КонецЕсли;
		//	КонецЦикла; 
		//    тНиз = тНиз + ?(ЕстьЗначения, 1, 0);
		//	ОбойтиСнизу = ЕстьЗначения;
		//КонецЕсли; 

		Если НЕ ОбойтиСлева И НЕ ОбойтиСправа Тогда
			Прервать;
		КонецЕсли; 
		
	КонецЦикла; 

	Элементы.Результат.ТекущаяОбласть = ПолеТабличногоДокумента.Область(МинВерх, тЛево, МаксНиз, тПраво);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриАктивизацииОбласти(Элемент)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	Сумма = 0;
	Количество = 0;
	Максимальное = 0;
	Минимальное = 0;
	АдресаЯчеек = Новый Структура;

	Для каждого Область Из ПолеТабличногоДокумента.ВыделенныеОбласти Цикл
	
		Если ТипЗнч(Область) = Тип("РисунокТабличногоДокумента") ИЛИ Область = Неопределено Тогда  // ОбластьЯчеекТабличногоДокумента
			Продолжить;
		КонецЕсли;
		
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Таблица Тогда
			Продолжить;
		ИначеЕсли Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			СуммироватьЗначения(Область.Верх, Область.Низ, Область.Лево, Область.Право, Сумма, Количество, Максимальное, Минимальное, АдресаЯчеек, ПолеТабличногоДокумента);
		ИначеЕсли Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			СуммироватьЗначения(Область.Верх, Область.Низ, 1, ПолеТабличногоДокумента.ШиринаТаблицы, Сумма, Количество, Максимальное, Минимальное, АдресаЯчеек, ПолеТабличногоДокумента);
		ИначеЕсли Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Колонки Тогда
			СуммироватьЗначения(1, ПолеТабличногоДокумента.ВысотаТаблицы, Область.Лево, Область.Право, Сумма, Количество, Максимальное, Минимальное, АдресаЯчеек, ПолеТабличногоДокумента);
		КонецЕсли; 

	КонецЦикла; 
	
	СуммаЯчеек = Сумма;
	СуммаЯчеекСтруктура.Сумма = Сумма;
	СуммаЯчеекСтруктура.Количество = Количество;
	СуммаЯчеекСтруктура.Минимальное = Минимальное;
	СуммаЯчеекСтруктура.Максимальное = Максимальное;
	СуммаЯчеекСтруктура.Среднее = ?(Количество = 0, 0, Сумма / Количество);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СуммироватьЗначения(Верх, Низ, Лево, Право, Сумма, Количество, Максимальное, Минимальное, АдресаЯчеек, ПолеТабличногоДокумента)
	
	ТипЧисло = Тип("Число");
	
	Для ИндСтр = Верх По Низ Цикл
		Для ИндКол = Лево По Право Цикл
			//Попытка
			//	ИмяОбласти = "R" + Формат(ИндСтр, "ЧГ=0") + "C" + Формат(ИндКол, "ЧГ=0");
			//	Если АдресаЯчеек.Свойство(ИмяОбласти) Тогда
			//		Продолжить;
			//	Иначе
			//		АдресаЯчеек.Вставить(ИмяОбласти);
			//	КонецЕсли; 
			//	СуммаЯчейки = Число(СтрЗаменить(ПолеТабличногоДокумента.Область(ИмяОбласти).Текст, " ", ""));
			//	Сумма = Сумма + СуммаЯчейки;
			//	Количество = Количество + 1;
			//	
			//	Если Максимальное = 0 Тогда
			//	    Максимальное = СуммаЯчейки;
			//	ИначеЕсли Максимальное < СуммаЯчейки Тогда
			//	    Максимальное = СуммаЯчейки;
			//	КонецЕсли; 
			//	
			//	Если Минимальное = 0 Тогда
			//	    Минимальное = СуммаЯчейки;
			//	ИначеЕсли Минимальное > СуммаЯчейки Тогда
			//	    Минимальное = СуммаЯчейки;
			//	КонецЕсли; 
			//	
			//Исключение
			//КонецПопытки;
			ИмяОбласти = "R" + Формат(ИндСтр, "ЧГ=0") + "C" + Формат(ИндКол, "ЧГ=0");
			Если АдресаЯчеек.Свойство(ИмяОбласти) Тогда
				Продолжить;
			Иначе
				АдресаЯчеек.Вставить(ИмяОбласти);
			КонецЕсли; 
			// ++ AKOR 2.3.3.1
			//Если НЕ ПолеТабличногоДокумента.Область(ИмяОбласти).СодержитЗначение Тогда
			//	Продолжить;
			//КонецЕсли; 
			//ЗначениеЯчейки = ПолеТабличногоДокумента.Область(ИмяОбласти).Значение;
			//ЗначениеЯчейки = ПолеТабличногоДокумента.Область(ИмяОбласти).Расшифровка;
			РасшифровкаЯчейки = ПолеТабличногоДокумента.Область(ИмяОбласти).Расшифровка;
			ЗначениеЯчейки = Неопределено;
			
			Если ТипЗнч(РасшифровкаЯчейки) <> Тип("Структура") Тогда
				Продолжить;
			ИначеЕсли НЕ РасшифровкаЯчейки.Свойство("Значение", ЗначениеЯчейки) Тогда
				Продолжить;
			КонецЕсли; 
			
			ЗначениеЯчейки = РасшифровкаЯчейки.Значение;
			// -- AKOR 2.3.3.1
			Если ТипЗнч(ЗначениеЯчейки) = ТипЧисло Тогда
				Сумма = Сумма + ЗначениеЯчейки;
				Количество = Количество + 1;
				
				Если Максимальное = 0 Тогда
					Максимальное = ЗначениеЯчейки;
				ИначеЕсли Максимальное < ЗначениеЯчейки Тогда
					Максимальное = ЗначениеЯчейки;
				КонецЕсли; 
				
				Если Минимальное = 0 Тогда
					Минимальное = ЗначениеЯчейки;
				ИначеЕсли Минимальное > ЗначениеЯчейки Тогда
					Минимальное = ЗначениеЯчейки;
				КонецЕсли; 
				
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры


&НаКлиенте
Процедура СуммаЯчеекНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму(ПолучитьИмяОбработки() + ".Форма.ФормаПоказанияЯчеек", СуммаЯчеекСтруктура);
	
КонецПроцедуры


&НаКлиенте
Процедура МЗаместить(Команда)
	СуммаВПамяти = СуммаЯчеек;
КонецПроцедуры

&НаКлиенте
Процедура МПлюс(Команда)
	СуммаВПамяти = СуммаВПамяти + СуммаЯчеек;
КонецПроцедуры


&НаКлиенте
Процедура ММинус(Команда)
	СуммаВПамяти = СуммаВПамяти - СуммаЯчеек;
КонецПроцедуры


&НаКлиенте
Процедура МРазделить(Команда)
	СуммаВПамяти = ?(СуммаЯчеек = 0, 0, СуммаВПамяти / СуммаЯчеек);
КонецПроцедуры


&НаКлиенте
Процедура МУмножить(Команда)
	СуммаВПамяти = СуммаВПамяти * СуммаЯчеек;
КонецПроцедуры

&НаКлиенте
Процедура ЕМинус(Команда)
	СуммаВПамяти = СуммаЯчеек - СуммаВПамяти;
КонецПроцедуры

&НаКлиенте
Процедура ЕРазделить(Команда)
	СуммаВПамяти = СуммаЯчеек / СуммаВПамяти;
КонецПроцедуры

&НаСервере
Процедура ДобавитьИтоговоуюСтрокуТаблицыНаСервере()
	
	//ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;
	//
	//КолонкиСЧислами = Новый Структура;
	//ТабЗначений2 = Новый ТаблицаЗначений;
	//Для Сч = 1 По Элементы.Результат.ТекущаяОбласть.Право Цикл
	//	
	//	ТипыКолонкиСтрокой = Результат.Область(Элементы.Результат.ТекущаяОбласть.Верх,Сч).Примечание.Текст;
	//	ИмяКолонкиОбрабатываемой = Результат.Область(Элементы.Результат.ТекущаяОбласть.Верх,Сч).Текст;
	//	Если Найти(ТипыКолонкиСтрокой, "Число") > 0 Тогда
	//		КолонкиСЧислами.Вставить(ИмяКолонкиОбрабатываемой);
	//	КонецЕсли;
	//	
	//	ТабЗначений2.Колонки.Добавить(ИмяКолонкиОбрабатываемой, Новый ОписаниеТипов("Null, Число, Строка"));
	//	
	//КонецЦикла; 

	//ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	//
	//ПостроительОтчета = Новый ПостроительОтчета; 
	//ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	//ПостроительОтчета.Выполнить();
	//
	//ТабЗначений = ПостроительОтчета.Результат.Выгрузить();
	//
	//ТипЧисло = Тип("Число");
	////Для каждого Колонка Из ТабЗначений.Колонки Цикл
	////	ТабЗначений2.Колонки.Добавить(Колонка.Имя, Новый ОписаниеТипов(Колонка.ТипЗначения, "Число"));
	////КонецЦикла;

	//Для каждого Строка Из ТабЗначений Цикл
	//	
	//	НоваяСтрока = ТабЗначений2.Добавить();
	//	Для каждого Колонка Из ТабЗначений.Колонки Цикл
	//		
	//		Если НЕ КолонкиСЧислами.Свойство(Колонка.Имя) Тогда
	//			Продолжить;
	//		КонецЕсли; 
	//		
	//		ТекущееЗначение = Строка[Колонка.Имя];
	//		Попытка
	//		НоваяСтрока[Колонка.Имя] = Число(ТекущееЗначение);
	//		//КолонкиСЧислами.Вставить(Колонка.Имя);
	//		Исключение
	//		НоваяСтрока[Колонка.Имя] = ТекущееЗначение;
	//		КонецПопытки;
	//	
	//	КонецЦикла; 
	//
	//КонецЦикла;
	//
	//Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Низ, , ОбластьЯчеек.Низ, ), Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ),ТипСмещенияТабличногоДокумента.ПоВертикали, Истина);	
	//Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).Очистить(Истина, Ложь, Истина);
	//Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;
	//
	//ИндексКолонки = -1;
	//Для каждого Колонка Из ТабЗначений.Колонки Цикл
	//	
	//	ИндексКолонки = ИндексКолонки + 1;
	//	
	//	Если НЕ КолонкиСЧислами.Свойство(Колонка.Имя) Тогда
	//		Продолжить;
	//	КонецЕсли; 
	//	
	//	//Результат.Область(ОбластьЯчеек.Низ+1, ИндексКолонки + 1).Текст = ТабЗначений2.Итог(ТабЗначений2.Колонки[ИндексКолонки]);
	//	Результат.Область(ОбластьЯчеек.Низ+1, ИндексКолонки + 1).Значение = ТабЗначений2.Итог(ТабЗначений2.Колонки[ИндексКолонки]);
	//КонецЦикла;
	
	////////////////////////////////////////////
		
	ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;

	ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	
	ПостроительОтчета = Новый ПостроительОтчета; 
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	ПостроительОтчета.Выполнить();
	
	ТабЗначений = ПостроительОтчета.Результат.Выгрузить();
	
	ТипЧисло = Тип("Число");
	
	Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Низ, , ОбластьЯчеек.Низ, ), Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ),ТипСмещенияТабличногоДокумента.ПоВертикали, Истина);	
	Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).Очистить(Истина, Истина, Истина); // Очистить(<ОчищатьТекст>, <ОчищатьФорматирование>, <ОчищатьРамки>). 
	Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;
	
	Об = РеквизитФормыВЗначение("Объект");
	
	Для каждого Колонка Из ТабЗначений.Колонки Цикл
		
		ОписаниеТипаЗначения = Колонка.ТипЗначения;
		
		Если НЕ ОписаниеТипаЗначения.СодержитТип(ТипЧисло) Тогда
			Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).Расшифровка = Новый Структура("РольЯчейки,Значение", "ЯчейкаИтогаТаблицы", Неопределено);
			Продолжить;
		КонецЕсли;
		
		ЗначениеИтога = ТабЗначений.Итог(Колонка);
		
		Оформление = Об.ПараметрыДляОтображенияЯчейки(ЗначениеИтога, Неопределено, ОписаниеТипаЗначения);
		
		лТекущийТипЗначения = Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).ТипЗначения;
		
		лТекущаяШиринаКолонки = Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).ШиринаКолонки;
		
		Если лТекущийТипЗначения.СодержитТип(Тип("Число")) Тогда
			СимволовВРезультате = СтрДлина(Формат(ЗначениеИтога, "ЧГ=0"));
			НовыйТип = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(Макс(СимволовВРезультате, лТекущийТипЗначения.КвалификаторыЧисла.Разрядность), лТекущийТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти));
			НоваяШирина = СимволовВРезультате;
		Иначе
			НовыйТип = Новый ОписаниеТипов("Число");
			НоваяШирина = СимволовВРезультате;
		КонецЕсли; 
		
		Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).ТипЗначения   = НовыйТип;
		Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).Значение      = ЗначениеИтога;
		Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).ШиринаКолонки = Макс(лТекущаяШиринаКолонки, НоваяШирина);
		Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).ЦветТекста    = Оформление.ЦветТекста;
		Результат.Область(ОбластьЯчеек.Низ+1, ТабЗначений.Колонки.Индекс(Колонка) + 1).Расшифровка   = Новый Структура("РольЯчейки,Значение", "ЯчейкаИтогаТаблицы", Оформление.Значение);		
		
	КонецЦикла;
	
	Результат.Область(ОбластьЯчеек.Низ+1, , ОбластьЯчеек.Низ+1, ).Видимость = Истина;

	Элементы.Результат.ТекущаяОбласть = ЭтаФорма.Результат.Область(ОбластьЯчеек.Низ+1, 1, ОбластьЯчеек.Низ+1, ОбластьЯчеек.Право);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИтоговоуюСтрокуТаблицы(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;

	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
	    ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	ВыделитьТекущуюОбласть(Неопределено);
	ДобавитьИтоговоуюСтрокуТаблицыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СвернутьТаблицуНаСервере(пРезультат = Неопределено, пПараметры = Неопределено)
		
	ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;

	ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	
	ПостроительОтчета = Новый ПостроительОтчета; 
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	ПостроительОтчета.Выполнить();
	
	ТабЗначений = ПостроительОтчета.Результат.Выгрузить();
	
	КолонкиГруппировок = "";
	КолонкиСуммирования = "";
	
	Для каждого Стр Из пРезультат Цикл
	
		Если НЕ Стр.Группировать И НЕ Стр.Суммировать Тогда
			ТабЗначений.ЗаполнитьЗначения(Null, Стр.Имя);
			КолонкиГруппировок = КолонкиГруппировок + ?(КолонкиГруппировок = "", "", ",") + Стр.Имя;
		ИначеЕсли Стр.Группировать Тогда
			КолонкиГруппировок = КолонкиГруппировок + ?(КолонкиГруппировок = "", "", ",") + Стр.Имя;
		ИначеЕсли Стр.Суммировать Тогда
			КолонкиСуммирования = КолонкиСуммирования + ?(КолонкиСуммирования = "", "", ",") + Стр.Имя;
		КонецЕсли; 
	
	КонецЦикла; 
	
	СтрукураКолонокСуммирования = Новый Структура(КолонкиСуммирования);
	ТаблицаДляСвертки = Новый ТаблицаЗначений;
	
	Для каждого КолнкаИсточника Из ТабЗначений.Колонки Цикл
		
		лТекущийТипЗначения = КолнкаИсточника.ТипЗначения;
		
		Если СтрукураКолонокСуммирования.Свойство(КолнкаИсточника.Имя) И лТекущийТипЗначения.СодержитТип(Тип("Число")) Тогда
			
			ЗначениеИтога = ТабЗначений.Итог(КолнкаИсточника.Имя);
			
			СимволовВРезультате = СтрДлина(Формат(ЗначениеИтога, "ЧГ=0"));
			лТипКолонки = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(Макс(СимволовВРезультате, лТекущийТипЗначения.КвалификаторыЧисла.Разрядность), лТекущийТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти));
			лШирина = СимволовВРезультате;
			
		Иначе
			лТипКолонки = КолнкаИсточника.ТипЗначения;
			лШирина = КолнкаИсточника.Ширина;
		КонецЕсли; 
		
		ТаблицаДляСвертки.Колонки.Добавить(КолнкаИсточника.Имя, лТипКолонки, , лШирина);
	
	КонецЦикла; 
	
	Для каждого СтрокаИсточника Из ТабЗначений Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДляСвертки.Добавить(), СтрокаИсточника);
	КонецЦикла;
	
	//ТаблицаДляСвертки.Свернуть(КолонкиГруппировок, КолонкиСуммирования); 
	ТабЗначений = ТаблицаДляСвертки;
	
	ТабЗначений.Свернуть(КолонкиГруппировок, КолонкиСуммирования); 
	Об = РеквизитФормыВЗначение("Объект");
	
	СтрокВТаблице = ТабЗначений.Количество();
	
	ЧистаяСтрока = ОбластьЯчеек.Низ + 1;
	
	Пока ТипЗнч(Результат.Область(ЧистаяСтрока, 1).Расшифровка) = Тип("Структура") Цикл
		ЧистаяСтрока = ЧистаяСтрока + 1;
	КонецЦикла;
	
	// Добавляется копированием, чтобы сохранить ширины колонок.
	Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Низ, , ОбластьЯчеек.Низ, ), Результат.Область(ЧистаяСтрока, , ЧистаяСтрока, ),ТипСмещенияТабличногоДокумента.БезСмещения, Ложь);
	
	Результат.Область(ЧистаяСтрока, , ЧистаяСтрока, ).ЦветФона = Новый Цвет(-1, -1, -1);
	
	Для Сч = 1 По ОбластьЯчеек.Право Цикл
		Результат.Область(ЧистаяСтрока, Сч).СодержитЗначение = Истина;
		Результат.Область(ЧистаяСтрока, Сч).Значение = Неопределено;
		Результат.Область(ЧистаяСтрока, Сч).Расшифровка = Неопределено;
	КонецЦикла;
	
	// Замена ОбластьЯчеек.Низ на ЧистаяСтрока	
	
	Для Сч = 1  По СтрокВТаблице + 2 + 1 Цикл
		Результат.ВставитьОбласть(Результат.Область(ЧистаяСтрока, , ЧистаяСтрока, ), Результат.Область(ЧистаяСтрока + 1, , ЧистаяСтрока + 1, ),ТипСмещенияТабличногоДокумента.ПоВертикали, Истина);	
		//Результат.Область(ЧистаяСтрока + 1, , ЧистаяСтрока + 1, ).Очистить(Истина, Ложь, Ложь);
		//Результат.Область(ЧистаяСтрока + 1, , ЧистаяСтрока + 1, ).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;
	КонецЦикла; 
	
	//////////// Пустая строка для разрыва от исходной таблицы.
	//////////Результат.Область(ОбластьЯчеек.Низ + 1, , ОбластьЯчеек.Низ + 1, ).Очистить(Истина, Истина, Истина);
	
	// Вывод заголовка.
	//Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Верх, , ОбластьЯчеек.Верх, ), Результат.Область(ОбластьЯчеек.Низ + 2, , ОбластьЯчеек.Низ + 2, ),ТипСмещенияТабличногоДокумента.БезСмещения, Истина);	
	Результат.ВставитьОбласть(Результат.Область(ОбластьЯчеек.Верх, , ОбластьЯчеек.Верх, ), Результат.Область(ЧистаяСтрока + 1, , ЧистаяСтрока + 1, ),ТипСмещенияТабличногоДокумента.БезСмещения, Истина);
	Результат.Область(ЧистаяСтрока + 1, 1, ЧистаяСтрока + 1, ОбластьЯчеек.Право).ЦветФона = WebЦвета.НейтральноЗеленый;
	
	Для Сч = 1 По ОбластьЯчеек.Право Цикл
		Результат.Область(ЧистаяСтрока + 1, Сч).Расшифровка = Новый Структура("РольЯчейки,Значение", "ШапкаСгруппированойТаблицы", Неопределено);
		//Результат.Область(ЧистаяСтрока + 1, Сч).Расшифровка.РольЯчейки = "ШапкаСгруппированойТаблицы";
	КонецЦикла;
	
	// ЗапомнитьТекущиеТипыИШириныКолонок
	СвойстваКолонок = Новый Соответствие;
	
	// Вывод значений.
	Для Сч = 1  По СтрокВТаблице Цикл
		ТекСвернутаяСтрока = ТабЗначений[Сч - 1];
		ИндексКолонки = -1;
		Для каждого Колонка Из ТабЗначений.Колонки Цикл
			ИндексКолонки = ИндексКолонки + 1;
			
			ОписаниеТипаЗначения = Колонка.ТипЗначения;
			//ОписаниеТипаЗначения = Результат.Область(ОбластьЯчеек.Верх, ИндексКолонки + 1).Расшифровка.ТипЗначения; //.КвалификаторыЧисла.РазрядностьДробнойЧасти
			ЗначениеИтога = ТекСвернутаяСтрока[ИндексКолонки];

			//Если Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).СодержитЗначение Тогда
			//	Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).Значение = ЗначениеИтога;
			//Иначе
			//	Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).Текст = ЗначениеИтога;
			//КонецЕсли; 
			СодержитЗначение = ЗначениеИтога <> "<РезультатЗапроса>";
			Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).СодержитЗначение = СодержитЗначение;
			
			Если СодержитЗначение Тогда
				Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).ТипЗначения = Колонка.ТипЗначения;
				Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).Значение = ЗначениеИтога;
			Иначе
				Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).Текст = ЗначениеИтога;
			КонецЕсли;
			
			Оформление = Об.ПараметрыДляОтображенияЯчейки(ЗначениеИтога, Неопределено, ОписаниеТипаЗначения);
			Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).ЦветТекста = Оформление.ЦветТекста;
			Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).Расшифровка = Новый Структура("РольЯчейки,Значение", "СтрокаСгруппированойТаблицы", Оформление.Значение);
			Результат.Область(ЧистаяСтрока + 1 + Сч, ИндексКолонки + 1).Формат = Оформление.Формат;
		КонецЦикла;
	КонецЦикла; 
	
	// Вывод подвала.
	НомерСтрокиПодвала = ЧистаяСтрока + 1 + Сч;
	Для Сч = 1 По ОбластьЯчеек.Право Цикл
		Если Найти(КолонкиСуммирования, ТабЗначений.Колонки[Сч - 1].Имя) > 0 Тогда
			
			ОписаниеТипаЗначения = ТабЗначений.Колонки[Сч - 1].ТипЗначения;
			ЗначениеИтога = ТабЗначений.Итог(ТабЗначений.Колонки[Сч - 1]);

			Результат.Область(НомерСтрокиПодвала, Сч).ТипЗначения = ОписаниеТипаЗначения;
			Результат.Область(НомерСтрокиПодвала, Сч).Значение = ЗначениеИтога;
			
			Оформление = Об.ПараметрыДляОтображенияЯчейки(ЗначениеИтога, Неопределено, ОписаниеТипаЗначения);
			Результат.Область(НомерСтрокиПодвала, Сч).ЦветТекста = Оформление.ЦветТекста;
			Результат.Область(НомерСтрокиПодвала, Сч).Расшифровка = Новый Структура("РольЯчейки,Значение", "ИтогСгруппированойТаблицы", Оформление.Значение);
			Результат.Область(НомерСтрокиПодвала, Сч).Формат = Оформление.Формат;
		Иначе
			Результат.Область(НомерСтрокиПодвала, Сч).Расшифровка = Новый Структура("РольЯчейки,Значение", "ИтогСгруппированойТаблицы", Неопределено);
		КонецЕсли;  
			
		Результат.Область(НомерСтрокиПодвала + 1, Сч).Расшифровка = Неопределено;
	КонецЦикла;
	
	Результат.Область(НомерСтрокиПодвала, , НомерСтрокиПодвала, ).Очистить(Ложь, Ложь, Истина);
	Результат.Область(НомерСтрокиПодвала, , НомерСтрокиПодвала, ).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Забивать;

	Результат.Область(НомерСтрокиПодвала + 1, , НомерСтрокиПодвала + 1, ).Очистить(Истина, Истина, Истина);
	
	Результат.Область(ЧистаяСтрока, , ЧистаяСтрока, ).Очистить(Ложь, Ложь, Истина);
	Для Сч = 1 По ОбластьЯчеек.Право Цикл
		Результат.Область(ЧистаяСтрока, Сч).Расшифровка = Новый Структура("РольЯчейки,Значение", "СтрокаРазделитель", Неопределено);
	КонецЦикла;
	
	ЭтаФорма.Результат.Область(ЧистаяСтрока, , НомерСтрокиПодвала + 1, ).Видимость = Истина;
	
	Элементы.Результат.ТекущаяОбласть = ЭтаФорма.Результат.Область(ЧистаяСтрока + 1, 1, НомерСтрокиПодвала, ОбластьЯчеек.Право);
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьТаблицуНаКлиенте(пРезультат = Неопределено, пПараметры = Неопределено) Экспорт
	
	Если пПараметры.ИмяШага = "ВыбратьКолонкиСвертки" Тогда
		
		ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;
		
		ОписаниеКолонок = Новый Массив;
		
		Для Сч = 1 По ОбластьЯчеек.Право Цикл
			ЯчейкаЗаголовка = Результат.Область(ОбластьЯчеек.Верх, Сч);
			ИменаКолонок = Новый Структура("Имя,Тип", ЯчейкаЗаголовка.Текст, ЯчейкаЗаголовка.Примечание.Текст);
			ОписаниеКолонок.Добавить(ИменаКолонок);
		КонецЦикла;
		
		пПараметры.ИмяШага = "Свернуть";
		
		ПараметрыФормы = Новый Структура("ОписаниеКолонок", ОписаниеКолонок);
		Оповещение = Новый ОписаниеОповещения("СвернутьТаблицуНаКлиенте", ЭтаФорма, пПараметры);
		
		ОткрытьФорму(ПолучитьИмяОбработки() + ".Форма.ФормаНастройкаСверткиТаблицыЗначений", ПараметрыФормы, ЭтаФорма, ЭтаФорма, , , Оповещение, );
		
	ИначеЕсли пПараметры.ИмяШага = "Свернуть" Тогда
		
		Если пРезультат = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		
		СвернутьТаблицуНаСервере(пРезультат, пПараметры)
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьТаблицу(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;
	
	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
		ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	ВыделитьТекущуюОбласть(Неопределено);
	
	пПараметры = Новый Структура("ИмяШага", "ВыбратьКолонкиСвертки");
	СвернутьТаблицуНаКлиенте(, пПараметры);
	
КонецПроцедуры

&НаСервере
Процедура СортироватьТаблицуНаСервере(пРезультат = Неопределено, пПараметры = Неопределено)
	
	Если пРезультат = Неопределено ИЛИ пРезультат = "" Тогда
		Возврат;
	КонецЕсли; 
	
	Об = РеквизитФормыВЗначение("Объект");
	
	СтрокаСортировки = пРезультат;

	ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;

	ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	ПостроительОтчета = Новый ПостроительОтчета; 
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	ПостроительОтчета.Выполнить();
	ТабЗначений = ПостроительОтчета.Результат.Выгрузить();
	
	// Добавление колонки исходной (до сортировки) нумерации строк.
	ИмяКолонкиID = "А" + СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
	ТабЗначений.Колонки.Добавить(ИмяКолонкиID, Новый ОписаниеТипов("Число"));
	СтрокВТаблице = ТабЗначений.Количество();
	Для Сч = 1  По СтрокВТаблице Цикл
	    ТабЗначений[Сч - 1][ИмяКолонкиID] = Сч;
	КонецЦикла;      

	ТабЗначений.Сортировать(СтрокаСортировки);
	КоличествоКолонок = ТабЗначений.Колонки.Количество() - 1;
	ТабЗначений.Свернуть(ИмяКолонкиID);
	
	// Копия исходной таблицы из табличного документа.
	КопияИсходнойТаблицы = Новый ТабличныйДокумент;
	КопияИсходнойТаблицы.ВставитьОбласть(ОбластьЯчеек, КопияИсходнойТаблицы.Область(1, ОбластьЯчеек.Лево, ОбластьЯчеек.Низ - ОбластьЯчеек.Верх + 1, ОбластьЯчеек.Право), ТипСмещенияТабличногоДокумента.БезСмещения, Истина);	
	
	// Вывод
	СтрокаШапки = ОбластьЯчеек.Верх;
	Для Сч = 1  По СтрокВТаблице Цикл
		ТекОтстортированнаяСтрока = ТабЗначений[Сч - 1];
		Копируемое = КопияИсходнойТаблицы.Область(ТекОтстортированнаяСтрока[ИмяКолонкиID] + 1, 1, ТекОтстортированнаяСтрока[ИмяКолонкиID] + 1, КоличествоКолонок);
		МестоПриемник = Результат.Область(СтрокаШапки + Сч, 1, СтрокаШапки + Сч, КоличествоКолонок);
		Результат.ВставитьОбласть(Копируемое, МестоПриемник, ТипСмещенияТабличногоДокумента.БезСмещения, Истина); 	
	КонецЦикла; 
	
КонецПроцедуры

//&НаКлиенте
//Процедура ПоказатьКопиюТабДок() Экспорт
//	
//	КопияИсходнойТаблицы.Показать();
//	
//КонецПроцедуры


&НаКлиенте
Процедура СортироватьТаблицуНаКлиенте(пРезультат = Неопределено, пПараметры = Неопределено) Экспорт
	
	Если пПараметры.ИмяШага = "ВыбратьКолонкиСортировки" Тогда
		
		ОбластьЯчеек = Элементы.Результат.ТекущаяОбласть;
		
		ОписаниеКолонок = Новый Массив;
		
		Для Сч = 1 По ОбластьЯчеек.Право Цикл
			ЯчейкаЗаголовка = Результат.Область(ОбластьЯчеек.Верх, Сч);
			ИменаКолонок = Новый Структура("Имя,Тип", ЯчейкаЗаголовка.Текст, ЯчейкаЗаголовка.Примечание.Текст);
			ОписаниеКолонок.Добавить(ИменаКолонок);
		КонецЦикла;
		
		пПараметры.ИмяШага = "Сортировать";
		
		ПараметрыФормы = Новый Структура("ОписаниеКолонок", ОписаниеКолонок);
		Оповещение = Новый ОписаниеОповещения("СортироватьТаблицуНаКлиенте", ЭтаФорма, пПараметры);
		
		ОткрытьФорму(ПолучитьИмяОбработки() + ".Форма.ФормаНастройкаСортировкиТаблицыЗначений", ПараметрыФормы, ЭтаФорма, ЭтаФорма, , , Оповещение, );
		
	ИначеЕсли пПараметры.ИмяШага = "Сортировать" Тогда
		
		Если пРезультат = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		
		СортироватьТаблицуНаСервере(пРезультат, пПараметры);
	
		//ПодключитьОбработчикОжидания("ПоказатьКопиюТабДок", 0.1, Истина);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьТаблицу(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;
	
	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
		ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	ВыделитьТекущуюОбласть(Неопределено);
	
	пПараметры = Новый Структура("ИмяШага", "ВыбратьКолонкиСортировки");
	СортироватьТаблицуНаКлиенте(, пПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоВозрастанию(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;
	
	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
		ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	ВыделитьТекущуюКолонку(Неопределено);
	
	ЯчейкаКолонки = Результат.Область(Результат.ТекущаяОбласть.Верх, Результат.ТекущаяОбласть.Лево);
	
	СтрокаСортировки = ЯчейкаКолонки.Текст + " Возр";
	
	ВыделитьТекущуюОбласть(Неопределено);
	
	СортироватьТаблицуНаСервере(СтрокаСортировки);
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоУбыванию(Команда)
	
	ПолеТабличногоДокумента = ЭтаФорма.Результат;
	
	Если НЕ ЯчейкаЗаполнена(ПолеТабличногоДокумента.ТекущаяОбласть) Тогда
		ПоказатьПредупреждение(, "Активная ячейка выделения должна быть в таблице!");
		Возврат;
	КонецЕсли;
	
	ВыделитьТекущуюКолонку(Неопределено);
	
	ЯчейкаКолонки = Результат.Область(Результат.ТекущаяОбласть.Верх, Результат.ТекущаяОбласть.Лево);
	
	СтрокаСортировки = ЯчейкаКолонки.Текст + " Убыв";
	
	ВыделитьТекущуюОбласть(Неопределено);
	
	СортироватьТаблицуНаСервере(СтрокаСортировки);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если Элемент.Редактирование ИЛИ НЕ ТипЗнч(Область.Расшифровка) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Расшифровка.РольЯчейки = "ЯчейкаСтрокиТаблицы" И Область.Текст = "<РезультатЗапроса>" Тогда
		
		СтандартнаяОбработка = Ложь;
		//ИмяТабДокумента = Элемент.Имя;
		ИмяВыборки = Область.Расшифровка.Значение;
		
		ПараметрыОткрытия = Новый Структура;

		ПараметрыОткрытия.Вставить("ПутьКРезультатуЗапроса", Новый Структура("ИмяТабДокумента,ИмяВыборки", ИмяТабДокумента, ИмяВыборки));
		ПараметрыОткрытия.Вставить("ОбъектПутьКХранилищу", Объект.ПутьКХранилищу);

		ОткрытьФормуАвтоматически("ФормаТаблицаЗначений", ПараметрыОткрытия);
		Возврат;
	КонецЕсли; 
	
	Если Область.Расшифровка.РольЯчейки = "ЯчейкаСтрокиТаблицы" Тогда
		
		// SG, вставка 19/05/15 >>>
		// Сообщение об открытии элемента
		Если ЗначениеЗаполнено(Область.Расшифровка.Значение) Тогда
			СтандартнаяОбработка = Ложь;
			ПоказатьЗначение(, Область.Расшифровка.Значение);
			Состояние("Выполняется открытие элемента.",, "" + Область.Расшифровка.Значение);
		КонецЕсли;
		// SG, вставка 19/05/15 <<<
		
		Возврат;
	КонецЕсли; 
	
	Если Область.Расшифровка.РольЯчейки = "ШапкаТаблицы" Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли; 
	
	Если Область.Расшифровка.РольЯчейки = "ЗаголовокТаблицы" Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли; 
	
	Если Область.Расшифровка.РольЯчейки = "ЯчейкаИтогаТаблицы" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Область.Расшифровка.Значение);
		Возврат;
	КонецЕсли; 
	
	Если Область.Расшифровка.РольЯчейки = "ШапкаСгруппированойТаблицы" Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли; 
	
	Если Область.Расшифровка.РольЯчейки = "СтрокаСгруппированойТаблицы" Тогда
		СтандартнаяОбработка = Ложь;
		Если ЗначениеЗаполнено(Область.Расшифровка.Значение) Тогда
			ПоказатьЗначение(, Область.Расшифровка.Значение);
			Состояние("Выполняется открытие элемента.",, "" + Область.Расшифровка.Значение);
		КонецЕсли;
		Возврат;
	КонецЕсли; 
	
	Если Область.Расшифровка.РольЯчейки = "ИтогСгруппированойТаблицы" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Область.Расшифровка.Значение);
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьФормуАвтоматически(ИмяФормы, ПараметрыОткрытияФормы = Неопределено, ИмяПроцедуры = "", ПараметрыПроцедуры = Неопределено)

    ПутьКФорме = ПолучитьИмяОбработки() + ".Форма." + ИмяФормы;

	//Если Лев(Объект.ВерсияПриложения, 3) = "8.2" Тогда
	Если Объект.МодальностьРазрешена Тогда
		КодВыполнения = "
		|ОписаниеВыбранныхТипов = ОткрытьФормуМодально(ПутьКФорме, ПараметрыОткрытияФормы);
		|" + ИмяПроцедуры + ?(ПустаяСтрока(ИмяПроцедуры), "", "(ОписаниеВыбранныхТипов, ПараметрыПроцедуры);");
	Иначе
		КодВыполнения = "
		|" + ?(ПустаяСтрока(ИмяПроцедуры), "", "Оповещение = Новый ОписаниеОповещения(" + """" + ИмяПроцедуры + """" + ", ЭтаФорма, ПараметрыПроцедуры);") + "
		// SG, правка 16/09/15 >>>
		// Лучше открывать формы в режиме "БлокироватьОкноВладельца". Так как нужно "бегать" по данным БД не открывая другой сеанс.
		|ОткрытьФорму(ПутьКФорме, ПараметрыОткрытияФормы, , , , , " + ?(ПустаяСтрока(ИмяПроцедуры), "", "Оповещение") + ", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);"; 
		// original
		#Область Исправлено
		//|ОткрытьФорму(ПутьКФорме, ПараметрыОткрытияФормы, , , , , " + ?(ПустаяСтрока(ИмяПроцедуры), "", "Оповещение") + ");"; 
		#КонецОбласти
		// SG, правка 16/09/15 <<<
		
	КонецЕсли;
	
	Выполнить(КодВыполнения);

КонецПроцедуры

&НаСервере
Функция ПолучитьИмяОбработки()
	
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	
КонецФункции 

&НаКлиенте
Процедура НачатьПоиск(Команда)
	
	ТекущийТекст = Элементы.Результат.ТекущаяОбласть.Текст;
	
	Если Не ПустаяСтрока(ТекущийТекст) Тогда
		СтрокаПоиска = ТекущийТекст;
		НайтиСтрокуПоиска(Неопределено);
	КонецЕсли;
	
	Элементы.ГруппаПоиск.Видимость = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиСтрокуПоиска(Команда)

	Если СтрокаПоиска = "" Тогда
		Возврат;
	КонецЕсли;
	
	РезультатыПоиска.Очистить();
	
	ТабДок = ЭтаФорма.Результат;
	НаправлениеВперед = Истина;
	
	Если Поиск_ИскатьВВыделеннойОбласти Тогда
		ОбластьПоиска = Элементы.Результат.ТекущаяОбласть;
		//СтартПоиска = ТабДок.Область(ОбластьПоиска.Верх, ТабДок.ТекущаяОбласть.Лево);
	Иначе
		ОбластьПоиска = Неопределено;
		//СтартПоиска = ТабДок.Область(1, 1);
	КонецЕсли; 
	
	//НайтиТекст(<Строка>, <Начало>, <Где>, <ИскатьПоСтрокам>, <ЯчейкаЦеликом>, <ИскатьВперед>, <ИгнорироватьРегистр>) 
	Область = ТабДок.НайтиТекст(СтрокаПоиска, , ОбластьПоиска, Поиск_ПоСтрокам, Поиск_ЯчейкаЦеликом, НаправлениеВперед, Истина);
	Пока НЕ ТипЗнч(Область)=Тип("Неопределено") Цикл
	    НоваяСтрока = РезультатыПоиска.Добавить();
		НоваяСтрока.Значение = Область.Текст;
		НоваяСтрока.Ячейка = Область.Имя;
		Область = ТабДок.НайтиТекст(СтрокаПоиска, Область, ОбластьПоиска, Поиск_ПоСтрокам, Поиск_ЯчейкаЦеликом, НаправлениеВперед, Истина);
	КонецЦикла; 
	
	
	//ПолеТабличногоДокумента = ЭтаФорма.Результат;
	//Параметрыоткрытия = Новый Структура("СтрокаПоиска", ПолеТабличногоДокумента.ТекущаяОбласть.Текст);
	//ОткрытьФорму("ВнешняяОбработка.КонсольЗапросовУФ.Форма.ФормаПоиск", Параметрыоткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПоиск(Команда)
	Элементы.ГруппаПоиск.Видимость = Ложь;	
КонецПроцедуры

&НаКлиенте
Процедура РезультатыПоискаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.РезультатыПоиска.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	Элементы.Результат.ТекущаяОбласть = ЭтаФорма.Результат.Область(ТекущиеДанные.Ячейка);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьОбластьЯчеек(Команда)

	ОбластьДляКопирования = Элементы.Результат.ТекущаяОбласть.Имя;
	Элементы.ВставитьОбластьЯчеек.Заголовок = ОбластьДляКопирования;
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьОбластьЯчеек(Команда)
	
	ВставитьОбластьЯчеекнаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВставитьОбластьЯчеекнаСервере()
	
	Если ПустаяСтрока(ОбластьДляКопирования) Тогда
	
		Возврат;
	
	КонецЕсли; 

	Копируемое = Результат.Область(ОбластьДляКопирования);
	
	Результат.ВставитьОбласть(Копируемое, Элементы.Результат.ТекущаяОбласть, ТипСмещенияТабличногоДокумента.БезСмещения, Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура ПоискОчиститьФон(Команда)
	ЦветФона = Новый Цвет(-1,-1,-1);
	ПоискЗалитьФонНаСервере(ЦветФона);
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗалитьФонНаСервере(ЦветФона)
	
	ТипСтруктура = Тип("Структура");
	СтруктураКоличествоКолонок = Новый Структура;
	
	Для каждого Строка Из РезультатыПоиска Цикл
		
		Если РежимВыделенияФонаПоиска = 0 Тогда
			Результат.Область(Строка.Ячейка).ЦветФона = ЭтаФорма.ТекущийЭлемент.ЦветФона;
		ИначеЕсли РежимВыделенияФонаПоиска = 1 Тогда
			ТекОбл = Результат.Область(Строка.Ячейка);
			Лево = ТекОбл.Лево;
			Право = ТекОбл.Право;
			Если ТипЗнч(ТекОбл.Расшифровка) = ТипСтруктура Тогда
				
				ИмяПакета = "";
				Если ТекОбл.Расшифровка.Свойство("ИмяПакета", ИмяПакета) Тогда
					КоличествоКолонок = 0;
					Если СтруктураКоличествоКолонок.Свойство(ИмяПакета, КоличествоКолонок) Тогда
						Лево = 1;
						Право = КоличествоКолонок;
					Иначе
						
						тОбл = ТекОбл; //ПолеТабличногоДокумента.Область(тСтр, тКол);
						тКол = тОбл.Право + 1;
						тСтр = тОбл.Верх;
						Если ЯчейкаЗаполнена(тОбл) Тогда
							тОбл = Результат.Область(тСтр, тКол);
							Пока ЯчейкаЗаполнена(тОбл) Цикл
							
								тКол = тКол + 1;
							    тОбл = Результат.Область(тСтр, тКол);
							КонецЦикла; 
							//;
							Лево = 1;
							Право = тКол - 1;
							СтруктураКоличествоКолонок.Вставить(ИмяПакета, Право);
						КонецЕсли;
						
					КонецЕсли; 
					
				КонецЕсли; 
			
			КонецЕсли; 
			Результат.Область(ТекОбл.Верх, Лево, ТекОбл.Верх, Право).ЦветФона = ЦветФона;
		КонецЕсли; 
	
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗалитьФон(Команда)
	ЦветФона = ЭтаФорма.ТекущийЭлемент.ЦветФона;
	ПоискЗалитьФонНаСервере(ЦветФона);
КонецПроцедуры

&НаКлиенте
Процедура ПоискВыбратьЦветФона(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЯчейкаЗалитьФонЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли; 

	Элементы.Результат.ТекущаяОбласть.ЦветФона = Результат;

КонецПроцедуры

&НаКлиенте
Процедура РежимВыделенияФонаЯчеекПоиска(Команда)
	
	Если ЭтаФорма.ТекущийЭлемент.Имя = "РежимВыделенияФонаЯчеекПоиска_Ячейка" Тогда
		РежимВыделенияФонаПоиска = 1;
		Элементы.РежимВыделенияФонаЯчеекПоиска_Ячейка.Видимость = Ложь;
		Элементы.РежимВыделенияФонаЯчеекПоиска_Строка.Видимость = Истина;
	ИначеЕсли ЭтаФорма.ТекущийЭлемент.Имя = "РежимВыделенияФонаЯчеекПоиска_Строка" Тогда
		РежимВыделенияФонаПоиска = 0;
		Элементы.РежимВыделенияФонаЯчеекПоиска_Ячейка.Видимость = Истина;
		Элементы.РежимВыделенияФонаЯчеекПоиска_Строка.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры


