

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Об = РеквизитФормыВЗначение("Объект");
	
	ЭтоОбъектКонфигурации = Метаданные.НайтиПоТипу(ТипЗнч(Об)) <> Неопределено;
	
	МетаданныеОбъекта = Об.Метаданные();
	
	Если ЭтоОбъектКонфигурации Тогда
		ИмяОбработки = МетаданныеОбъекта.Имя;
	Иначе
		ПутьКФайлуКонсолиЗапросов = Об.ИспользуемоеИмяФайла;
		Элементы.ВариантВызоваКонсолиЗапросов.Доступность = Ложь;
	КонецЕсли; 

	ВариантВызоваКонсолиЗапросов = ?(ЭтоОбъектКонфигурации, 1, 0);
	
	ПроверкаЗащитыОтОпасныхДействий = ПроверкаЗащитыОтОпасныхДействий();
	
	Если ПроверкаЗащитыОтОпасныхДействий.ЕстьПроверка Тогда
		
		Если ПроверкаЗащитыОтОпасныхДействий.ПроверкаВключена Тогда
			ТекстСообщения = "У текущего пользователя включена защита от опасных действий!
			|Чтобы вызов консоли не блокировался - необходимо отключить защиту.";
			Элементы.ДекорацияЗнакЗапрета.Видимость = Истина;
			Элементы.ДекорацияЗапретаНет.Видимость = Ложь;
		Иначе
			ТекстСообщения = "Защита от опасных действий отключена.";
			Элементы.ДекорацияЗнакЗапрета.Видимость = Ложь;
			Элементы.ДекорацияЗапретаНет.Видимость = Истина;
		КонецЕсли; 
	Иначе
		Элементы.ГруппаПроверкаЗащиты.Видимость = Ложь;
	КонецЕсли; 
	
	Элементы.ДекорацияТекстСообщения.Заголовок = ТекстСообщения;
	
	Заголовок = "Код вызова обработки """ + МетаданныеОбъекта.Имя + " " + МетаданныеОбъекта.Комментарий + """ из отладчика.";
	
	НазваниеПеременнойЗапроса = ?(НазваниеПеременнойЗапроса = "", "Запрос", НазваниеПеременнойЗапроса);
	
	Элементы.ПутьКФайлуРезультатаЗапроса.Доступность = МестоХранениеЗахваченныхДанных = 1;
	Элементы.ИмяФайлаБезРасширения.Доступность = МестоХранениеЗахваченныхДанных = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСтрокуВызова();

КонецПроцедуры


&НаКлиенте
Процедура ВариантВызоваКонсолиЗапросовПриИзменении(Элемент)
	
	ОбновитьСтрокуВызова();

КонецПроцедуры


&НаКлиенте
Процедура ПутьКФайлуКонсолиЗапросовПриИзменении(Элемент)
	
	ОбновитьСтрокуВызова();

КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуКонсолиЗапросовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПутьКФайлуКонсолиЗапросовНачалоВыбора_Завершение", ЭтаФорма);
	Значение = Новый Структура("ПутьКФайлуНаСервереПриложения,ФильтрТипов", ПутьКФайлуКонсолиЗапросов, ".epf");
	ОткрытьФорму(ПолучитьИмяОбработки() + ".Форма.ФормаПутиКФайлуНаСервереПриложения", Значение, ЭтаФорма, , , , Оповещение, );
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуКонсолиЗапросовНачалоВыбора_Завершение(Значение, ДополнительныеПараметры) Экспорт
	
	Если Значение = Неопределено ИЛИ НЕ Значение.Прочитать Тогда
		Возврат;
	КонецЕсли; 

	ПутьКФайлуКонсолиЗапросов = Значение.Путь;
	
	ОбновитьСтрокуВызова();

КонецПроцедуры



&НаКлиенте
Процедура НазваниеПеременнойЗапросаПриИзменении(Элемент)
	
	ОбновитьСтрокуВызова();

КонецПроцедуры


&НаКлиенте
Процедура ПутьКФайлуРезультатаЗапросаПриИзменении(Элемент)
	
	ОбновитьСтрокуВызова();

КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуРезультатаЗапросаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПутьКФайлуРезультатаЗапросаНачалоВыбора_Завершение", ЭтаФорма);
	Значение = Новый Структура("ПутьКФайлуНаСервереПриложения,ФильтрТипов", КаталогФайлаРезультатаЗапроса, ".txt");
	ОткрытьФорму(ПолучитьИмяОбработки() + ".Форма.ФормаПутиКФайлуНаСервереПриложения", Значение, ЭтаФорма, , , , Оповещение, );
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуРезультатаЗапросаНачалоВыбора_Завершение(Значение, ДополнительныеПараметры) Экспорт
	
	Если Значение = Неопределено ИЛИ НЕ Значение.Прочитать Тогда
		Возврат;
	КонецЕсли; 

	Файл = Новый Файл(Значение.Путь);
	
	Если Файл.ЭтоКаталог() Тогда
		КаталогФайлаРезультатаЗапроса = Файл.ПолноеИмя;
	КонецЕсли; 
	
	Если Файл.ЭтоФайл() Тогда
		КаталогФайлаРезультатаЗапроса = Файл.Путь;
		ИмяФайлаБезРасширения = Файл.ИмяБезРасширения;
	КонецЕсли; 
	
	ОбновитьСтрокуВызова();

КонецПроцедуры


&НаКлиенте
Процедура ИмяФайлаБезРасширенияПриИзменении(Элемент)
	
	ОбновитьСтрокуВызова();

КонецПроцедуры


&НаСервере
Процедура ПроверкаНастроекНаСервере()
	
	ЕстьОшибки = Ложь;

	Если ВариантВызоваКонсолиЗапросов = 0 И ПустаяСтрока(ПутьКФайлуКонсолиЗапросов) Тогда
	    Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка! Не указан путь к файлу консоли запросов.";
		Сообщение.Поле = "ПутьКФайлуКонсолиЗапросов";
		Сообщение.Сообщить();
		ЕстьОшибки = Истина;
	КонецЕсли; 

	Если ПустаяСтрока(НазваниеПеременнойЗапроса) Тогда
	    Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка! Не указан переменная результата запроса.";
		Сообщение.Поле = "НазваниеПеременнойЗапроса";
		Сообщение.Сообщить();
		ЕстьОшибки = Истина;
	КонецЕсли; 

	Если МестоХранениеЗахваченныхДанных = 1 И ПустаяСтрока(КаталогФайлаРезультатаЗапроса) Тогда
	    Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка! Не указан каталог файла результата запроса.";
		Сообщение.Поле = "КаталогФайлаРезультатаЗапроса";
		Сообщение.Сообщить();
		ЕстьОшибки = Истина;
	КонецЕсли; 
	
	Если МестоХранениеЗахваченныхДанных = 1 И ПустаяСтрока(ИмяФайлаБезРасширения) Тогда
	    Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка! Не указано имя файла.";
		Сообщение.Поле = "ИмяФайлаБезРасширения";
		Сообщение.Сообщить();
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли; 
	
	Если ВариантВызоваКонсолиЗапросов = 0 Тогда
		
		Попытка
			ФайлОбработки = Новый Файл(ПутьКФайлуКонсолиЗапросов);
			
			Если ФайлОбработки.Существует() И ФайлОбработки.ЭтоФайл() Тогда
				ОбработкаОбъект = ВнешниеОбработки.Создать(ПутьКФайлуКонсолиЗапросов, Ложь);
				ОбработкаОбъект = Неопределено;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Указанная консоль запросов существует.";
				Сообщение.Сообщить();
			Иначе 
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Ошибка! Указан некорректный путь к файлу консоли запросов.";
				Сообщение.Поле = "ПутьКФайлуКонсолиЗапросов";
				Сообщение.Сообщить();
			КонецЕсли; 
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка! Указан некорректный путь к файлу консоли запросов.";
			Сообщение.Поле = "ПутьКФайлуКонсолиЗапросов";
			Сообщение.Сообщить();
		КонецПопытки;
		
	КонецЕсли; 
	
	Если МестоХранениеЗахваченныхДанных = 1 Тогда
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		
		ВременныйФайл = Новый Файл(ИмяВременногоФайла);
		
		ИмяТестовогоФайла = ВременныйФайл.ИмяБезРасширения + "_ПроверкаДоступностиЗаписиФайла";
		
		ЕстьСлеш = Прав(КаталогФайлаРезультатаЗапроса, 1) = "\";
		
		ПолныйПутьКТестовомуФайлу = КаталогФайлаРезультатаЗапроса + ?(ЕстьСлеш, "", "\") + ИмяТестовогоФайла + ".txt";
		
		Данные = Новый ТаблицаЗначений;
		
		Если ЗначениеВФайл(ПолныйПутьКТестовомуФайлу, Данные) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Каталог файла результата запроса доступен для записи.";
			Сообщение.Сообщить(); 
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка! Не удалось выполнить запись тестового файла в указанный каталог: '" + КаталогФайлаРезультатаЗапроса + "'.";
			Сообщение.Поле = "КаталогФайлаРезультатаЗапроса";
			Сообщение.Сообщить(); 
		КонецЕсли; 
		
		Попытка
			УдалитьФайлы(ПолныйПутьКТестовомуФайлу);
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
		
		ПутьКФайлуРезультата = КаталогФайлаРезультатаЗапроса + "\" + ИмяФайлаБезРасширения + ".txt";
		
		ФайлРезультата = Новый Файл(ПутьКФайлуРезультата);
		
		Если ФайлРезультата.Существует() Тогда
			Попытка
				СтруктураДанных = ЗначениеИзФайла(ПутьКФайлуРезультата);
				Если ТипЗнч(СтруктураДанных) = Тип("Структура") 
					И СтруктураДанных.Свойство("ВнешнийРезультат") 
					И СтруктураДанных.Свойство("СтруктураРезультатовЗапросов") 
					И СтруктураДанных.Свойство("СтруктурыРезультатовЗапросовТабДоков") Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Выбран корректный файл выгрузки.";
					Сообщение.Сообщить(); 
				Иначе
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Ошибка! Указан неправильный файл результата! 
					|Можно указать:
					|	- Имя несуществующего файла,
					|	- Имя файла выгрузки созданного предыдущими вызовами консоли.";
					Сообщение.Поле = "ИмяФайлаБезРасширения";
					Сообщение.Сообщить(); 
				КонецЕсли;
			Исключение
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Ошибка! Указанный файл не подходит, т.к. не является файлом выгрузки! "; // + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				Сообщение.Поле = "ИмяФайлаБезРасширения";
				Сообщение.Сообщить(); 
			КонецПопытки;
			
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Имя файла корректно.";
			Сообщение.Сообщить(); 
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаНастроек(Команда)
	
	ПроверкаНастроекНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьСтрокуВызова()
	
	Элементы.ПутьКФайлуКонсолиЗапросов.Видимость = ВариантВызоваКонсолиЗапросов = 0;
	Элементы.ИмяОбработки.Видимость = ВариантВызоваКонсолиЗапросов = 1;
	//Элементы.ГруппаПроверкаЗащиты.Видимость = ВариантВызоваКонсолиЗапросов = 0;
	ПроверкаЗащитыОтОпасныхДействий();

	Если ВариантВызоваКонсолиЗапросов = 0 Тогда  // Внешняя обработка
		СтрокаВызова = "ВнешниеОбработки.Создать(""[ПутьКФайлуКонсолиЗапросов]"", Ложь).ОбработатьВнешнийЗапрос([Запрос], ""[ПутьКФайлуРезультатаЗапроса]"")";
		СтрокаВызова = СтрЗаменить(СтрокаВызова, "[ПутьКФайлуКонсолиЗапросов]", ?(ПустаяСтрока(ПутьКФайлуКонсолиЗапросов), "<ПутьКФайлуКонсолиЗапросов>", ПутьКФайлуКонсолиЗапросов));				
	Иначе // 1 Объект конфигурации.
		СтрокаВызова = "Обработки.[ИмяОбработки].Создать().ОбработатьВнешнийЗапрос([Запрос], ""[ПутьКФайлуРезультатаЗапроса]"")";
		СтрокаВызова = СтрЗаменить(СтрокаВызова, "[ИмяОбработки]", ?(ПустаяСтрока(ИмяОбработки), "<ИмяОбработки>", ИмяОбработки));				
	КонецЕсли; 
	
	ЕстьСлеш = Прав(КаталогФайлаРезультатаЗапроса, 1) = "\";
	
	СтрокаВызова = СтрЗаменить(СтрокаВызова, "[Запрос]", ?(ПустаяСтрока(НазваниеПеременнойЗапроса), "<ПеременнаяЗапроса>", НазваниеПеременнойЗапроса));				
	
	Если МестоХранениеЗахваченныхДанных = 0 Тогда
		СтрокаВызова = СтрЗаменить(СтрокаВызова, "[ПутьКФайлуРезультатаЗапроса]", "");				
	Иначе
		СтрокаВызова = СтрЗаменить(СтрокаВызова, "[ПутьКФайлуРезультатаЗапроса]", ?(ПустаяСтрока(КаталогФайлаРезультатаЗапроса), "<ПутьКФайлуРезультатаЗапроса>", КаталогФайлаРезультатаЗапроса) + ?(ЕстьСлеш, "", "\") + ИмяФайлаБезРасширения + ".txt");				
	КонецЕсли; 
		

КонецПроцедуры

&НаСервере
Функция ПолучитьИмяОбработки()
	
	Возврат РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	
КонецФункции 

&НаСервере
Функция ПроверкаЗащитыОтОпасныхДействий() Экспорт
	
	Результат = Новый Структура("ЕстьПроверка,ПроверкаВключена", Ложь, Неопределено);
	
	Свойства = Новый Структура("ЗащитаОтОпасныхДействий, UnsafeOperationProtection");
	ЗаполнитьЗначенияСвойств(Свойства, ПользователиИнформационнойБазы.ТекущийПользователь());

	ЗначениеНастройки = Неопределено;
	
	Если Свойства.ЗащитаОтОпасныхДействий <> Неопределено Тогда
	     ЗначениеНастройки = Свойства.ЗащитаОтОпасныхДействий;
		 Результат.ЕстьПроверка = Истина;
	ИначеЕсли Свойства.UnsafeOperationProtection <> Неопределено Тогда
	     ЗначениеНастройки = Свойства.UnsafeOperationProtection;
		 Результат.ЕстьПроверка = Истина;
	КонецЕсли; 
	
	Если Результат.ЕстьПроверка И ВариантВызоваКонсолиЗапросов = 0 Тогда
		Результат.ПроверкаВключена = ?(ЗначениеНастройки = Неопределено, Ложь, ЗначениеНастройки.ПредупреждатьОбОпасныхДействиях);
		Элементы.ГруппаПроверкаЗащиты.Видимость = Истина;
	Иначе
		Элементы.ГруппаПроверкаЗащиты.Видимость = Ложь;
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура МестоХранениеЗахваченныхДанныхПриИзменении(Элемент)
	
	Элементы.ПутьКФайлуРезультатаЗапроса.Доступность = МестоХранениеЗахваченныхДанных = 1;
	Элементы.ИмяФайлаБезРасширения.Доступность = МестоХранениеЗахваченныхДанных = 1;
	
	ОбновитьСтрокуВызова();

КонецПроцедуры


