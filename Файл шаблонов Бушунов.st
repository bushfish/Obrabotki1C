{1,
{8,
{"БушуновАН",1,0,"",""},
{0,
{"БлокПодписи",0,1,"Юкола","//ЮИБ Бушунов <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">+ 
<?>
//ЮИБ Бушунов <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">-"}
},
{0,
{"Временный шаблон",0,0,"","ЗаписьЖурналаРегистрации(""Добавление запланированного контакта на дату: ""+Формат(СтруктураРеквизитов.Период,""ДФ=dd.MM.yyyy""),УровеньЖурналаРегистрации.Информация,,СтруктураРеквизитов.Контрагент,""Нормальная запись из формы контакта"",РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);"}
},
{2,
{"Шаблоны событий формы для БСП",1,0,"",""},
{0,
{"ШаблонМодуляФормыОбъекта",0,0,"ШаблонМодуляФормыОбъекта","&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры



// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры
"}
},
{0,
{"ШаблонМодуляФормыСписка",0,0,"ШаблонМодуляФормыСписка","&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры



// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры
"}
}
},
{2,
{"Запросы",1,0,"",""},
{0,
{"РезультатЗапросаЦикл",0,0,"","Результат = Запрос.Выполнить();
Если НЕ Результат.Пустой() Тогда
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
	КонецЦикла
КонецЕсли;"}
},
{0,
{"РезультатЗапроса1",0,0,"РезультатЗапроса1","Результат = Запрос.Выполнить();
Если НЕ Результат.Пустой() Тогда
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат <?>
Иначе
	Возврат Неопределено
КонецЕсли;"}
}
},
{2,
{"Программная работа с форомой",1,0,"",""},
{0,
{"ДобвитьПолеВвода",0,0,"","Элем = Элементы.Добавить(<?> ,Тип(""ПолеФормы""), <?>);
Элем.ПутьКДанным = 
Элем.Вид = ВидПоляФормы.ПолеВвода;
Элем.Заголовок = """";"}
},
{0,
{"ДобавитьРеквизитФормы",0,0,"","МассивРеквизитов = Новый Массив;
Реквизит = Новый РеквизитФормы(ИмяРеквизита,Новый ОписаниеТипов(),Путь,Заголовок,Ложь);
МассивРеквизитов.Добавить(Реквизит);
ИзменитьРеквизиты(МассивРеквизитов);"}
}
},
{0,
{"ЕслиСервер",0,0,"ЕслиСервер","#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

	
#КонецЕсли"}
},
{0,
{"БлокПодписиАскона",0,0,"Аскона","//Аск Бушунов <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">+ 
<?>
//Аск Бушунов <?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">-"}
},
{1,
{"Внешние обработки",1,0,"",""},
{0,
{"Сведения о внешней ПФ",0,0,"ВНПФ","Функция СведенияОВнешнейОбработке() Экспорт
	Сведения = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	Сведения.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	Сведения.Наименование = ""Печать удостоверения качества"";
	Сведения.Назначение.Добавить(""Документ.РеализацияТоваровУслуг"");
	Сведения.БезопасныйРежим = Ложь;
	Сведения.Версия  = ""1.0"";
	Команда = Сведения.Команды.Добавить();
	Команда.Идентификатор =""ЮИ_ПечатьУдостоверенияКачества"";
	Команда.Представление = ""Печать удостоверения качества"";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовКлиентскогоМетода();
	Команда.ПоказыватьОповещение = Истина;
	Возврат  Сведения;
КонецФункции"}
}
}
}
}